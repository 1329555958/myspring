/**
 * This class is generated by jOOQ
 */
package org.wch.jooq.entity.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.wch.jooq.entity.Keys;
import org.wch.jooq.entity.Optimus;
import org.wch.jooq.entity.tables.records.TOrderRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrder extends TableImpl<TOrderRecord> {

	private static final long serialVersionUID = -28138858;

	/**
	 * The reference instance of <code>optimus.t_order</code>
	 */
	public static final TOrder T_ORDER = new TOrder();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TOrderRecord> getRecordType() {
		return TOrderRecord.class;
	}

	/**
	 * The column <code>optimus.t_order.order_id</code>.
	 */
	public final TableField<TOrderRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>optimus.t_order.chan_id</code>. 渠道id
	 */
	public final TableField<TOrderRecord, String> CHAN_ID = createField("chan_id", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "渠道id");

	/**
	 * The column <code>optimus.t_order.chan_user_id</code>. 渠道用户id
	 */
	public final TableField<TOrderRecord, String> CHAN_USER_ID = createField("chan_user_id", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "渠道用户id");

	/**
	 * The column <code>optimus.t_order.member_id</code>. 会员id
	 */
	public final TableField<TOrderRecord, String> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "会员id");

	/**
	 * The column <code>optimus.t_order.order_type</code>. 类型 deposit withdraw apply redeem
	 */
	public final TableField<TOrderRecord, String> ORDER_TYPE = createField("order_type", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "类型 deposit withdraw apply redeem");

	/**
	 * The column <code>optimus.t_order.product_id</code>. 产品id
	 */
	public final TableField<TOrderRecord, String> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "产品id");

	/**
	 * The column <code>optimus.t_order.amount</code>. 充值金额
	 */
	public final TableField<TOrderRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 2).nullable(false), this, "充值金额");

	/**
	 * The column <code>optimus.t_order.outer_order_id</code>. 外部id
	 */
	public final TableField<TOrderRecord, String> OUTER_ORDER_ID = createField("outer_order_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "外部id");

	/**
	 * The column <code>optimus.t_order.order_status</code>. 状态: I 初始   P 处理中 S 成功  F失败 
	 */
	public final TableField<TOrderRecord, String> ORDER_STATUS = createField("order_status", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "状态: I 初始   P 处理中 S 成功  F失败 ");

	/**
	 * The column <code>optimus.t_order.memo</code>. 备注
	 */
	public final TableField<TOrderRecord, String> MEMO = createField("memo", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "备注");

	/**
	 * The column <code>optimus.t_order.order_time</code>.
	 */
	public final TableField<TOrderRecord, Timestamp> ORDER_TIME = createField("order_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>optimus.t_order.update_time</code>.
	 */
	public final TableField<TOrderRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * The column <code>optimus.t_order.ext1</code>. 扩展1 可用于操作员
	 */
	public final TableField<TOrderRecord, String> EXT1 = createField("ext1", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "扩展1 可用于操作员");

	/**
	 * The column <code>optimus.t_order.ext2</code>. 扩展2 可用于审核员
	 */
	public final TableField<TOrderRecord, String> EXT2 = createField("ext2", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "扩展2 可用于审核员");

	/**
	 * Create a <code>optimus.t_order</code> table reference
	 */
	public TOrder() {
		this("t_order", null);
	}

	/**
	 * Create an aliased <code>optimus.t_order</code> table reference
	 */
	public TOrder(String alias) {
		this(alias, T_ORDER);
	}

	private TOrder(String alias, Table<TOrderRecord> aliased) {
		this(alias, aliased, null);
	}

	private TOrder(String alias, Table<TOrderRecord> aliased, Field<?>[] parameters) {
		super(alias, Optimus.OPTIMUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TOrderRecord> getPrimaryKey() {
		return Keys.KEY_T_ORDER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TOrderRecord>> getKeys() {
		return Arrays.<UniqueKey<TOrderRecord>>asList(Keys.KEY_T_ORDER_PRIMARY, Keys.KEY_T_ORDER_OUTER_ORDER_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TOrder as(String alias) {
		return new TOrder(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TOrder rename(String name) {
		return new TOrder(name, null);
	}
}
