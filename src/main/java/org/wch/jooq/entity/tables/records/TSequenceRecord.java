/**
 * This class is generated by jOOQ
 */
package org.wch.jooq.entity.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.wch.jooq.entity.tables.TSequence;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSequenceRecord extends UpdatableRecordImpl<TSequenceRecord> implements Record5<String, Long, Short, Short, Short> {

	private static final long serialVersionUID = 90655147;

	/**
	 * Setter for <code>optimus.t_sequence.NAME</code>. 名称
	 */
	public void setName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>optimus.t_sequence.NAME</code>. 名称
	 */
	public String getName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>optimus.t_sequence.CURRENT_VALUE</code>. 当前值
	 */
	public void setCurrentValue(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>optimus.t_sequence.CURRENT_VALUE</code>. 当前值
	 */
	public Long getCurrentValue() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>optimus.t_sequence.INCREMENT</code>. 增长步长
	 */
	public void setIncrement(Short value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>optimus.t_sequence.INCREMENT</code>. 增长步长
	 */
	public Short getIncrement() {
		return (Short) getValue(2);
	}

	/**
	 * Setter for <code>optimus.t_sequence.TOTAL</code>. 单次取值总量，更新总量需重启应用
	 */
	public void setTotal(Short value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>optimus.t_sequence.TOTAL</code>. 单次取值总量，更新总量需重启应用
	 */
	public Short getTotal() {
		return (Short) getValue(3);
	}

	/**
	 * Setter for <code>optimus.t_sequence.THRESHOLD</code>. 刷新阀值，更新阀值需重启应用
	 */
	public void setThreshold(Short value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>optimus.t_sequence.THRESHOLD</code>. 刷新阀值，更新阀值需重启应用
	 */
	public Short getThreshold() {
		return (Short) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, Long, Short, Short, Short> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, Long, Short, Short, Short> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return TSequence.T_SEQUENCE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return TSequence.T_SEQUENCE.CURRENT_VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field3() {
		return TSequence.T_SEQUENCE.INCREMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field4() {
		return TSequence.T_SEQUENCE.TOTAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field5() {
		return TSequence.T_SEQUENCE.THRESHOLD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getCurrentValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value3() {
		return getIncrement();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value4() {
		return getTotal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value5() {
		return getThreshold();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TSequenceRecord value1(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TSequenceRecord value2(Long value) {
		setCurrentValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TSequenceRecord value3(Short value) {
		setIncrement(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TSequenceRecord value4(Short value) {
		setTotal(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TSequenceRecord value5(Short value) {
		setThreshold(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TSequenceRecord values(String value1, Long value2, Short value3, Short value4, Short value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TSequenceRecord
	 */
	public TSequenceRecord() {
		super(TSequence.T_SEQUENCE);
	}

	/**
	 * Create a detached, initialised TSequenceRecord
	 */
	public TSequenceRecord(String name, Long currentValue, Short increment, Short total, Short threshold) {
		super(TSequence.T_SEQUENCE);

		setValue(0, name);
		setValue(1, currentValue);
		setValue(2, increment);
		setValue(3, total);
		setValue(4, threshold);
	}
}
