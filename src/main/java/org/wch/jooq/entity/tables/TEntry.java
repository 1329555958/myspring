/**
 * This class is generated by jOOQ
 */
package org.wch.jooq.entity.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.wch.jooq.entity.Keys;
import org.wch.jooq.entity.Optimus;
import org.wch.jooq.entity.tables.records.TEntryRecord;


/**
 * 分录（变化明细）
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TEntry extends TableImpl<TEntryRecord> {

	private static final long serialVersionUID = 188927843;

	/**
	 * The reference instance of <code>optimus.t_entry</code>
	 */
	public static final TEntry T_ENTRY = new TEntry();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TEntryRecord> getRecordType() {
		return TEntryRecord.class;
	}

	/**
	 * The column <code>optimus.t_entry.entry_id</code>.
	 */
	public final TableField<TEntryRecord, Long> ENTRY_ID = createField("entry_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>optimus.t_entry.amount</code>. 金额
	 */
	public final TableField<TEntryRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL.precision(18, 2), this, "金额");

	/**
	 * The column <code>optimus.t_entry.order_id</code>. 交易id
	 */
	public final TableField<TEntryRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "交易id");

	/**
	 * The column <code>optimus.t_entry.order_type</code>. 交易类型
	 */
	public final TableField<TEntryRecord, String> ORDER_TYPE = createField("order_type", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "交易类型");

	/**
	 * The column <code>optimus.t_entry.dc</code>. +  -
	 */
	public final TableField<TEntryRecord, String> DC = createField("dc", org.jooq.impl.SQLDataType.CHAR.length(1), this, "+  -");

	/**
	 * The column <code>optimus.t_entry.member_id</code>. 会员id
	 */
	public final TableField<TEntryRecord, String> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "会员id");

	/**
	 * The column <code>optimus.t_entry.account_id</code>. 账户id
	 */
	public final TableField<TEntryRecord, String> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "账户id");

	/**
	 * The column <code>optimus.t_entry.after_balance</code>.
	 */
	public final TableField<TEntryRecord, BigDecimal> AFTER_BALANCE = createField("after_balance", org.jooq.impl.SQLDataType.DECIMAL.precision(18, 2), this, "");

	/**
	 * The column <code>optimus.t_entry.before_balance</code>.
	 */
	public final TableField<TEntryRecord, BigDecimal> BEFORE_BALANCE = createField("before_balance", org.jooq.impl.SQLDataType.DECIMAL.precision(18, 2), this, "");

	/**
	 * The column <code>optimus.t_entry.digest</code>. 摘要
	 */
	public final TableField<TEntryRecord, String> DIGEST = createField("digest", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "摘要");

	/**
	 * The column <code>optimus.t_entry.create_time</code>.
	 */
	public final TableField<TEntryRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * The column <code>optimus.t_entry.ext1</code>.
	 */
	public final TableField<TEntryRecord, String> EXT1 = createField("ext1", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>optimus.t_entry.ext2</code>.
	 */
	public final TableField<TEntryRecord, String> EXT2 = createField("ext2", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * Create a <code>optimus.t_entry</code> table reference
	 */
	public TEntry() {
		this("t_entry", null);
	}

	/**
	 * Create an aliased <code>optimus.t_entry</code> table reference
	 */
	public TEntry(String alias) {
		this(alias, T_ENTRY);
	}

	private TEntry(String alias, Table<TEntryRecord> aliased) {
		this(alias, aliased, null);
	}

	private TEntry(String alias, Table<TEntryRecord> aliased, Field<?>[] parameters) {
		super(alias, Optimus.OPTIMUS, aliased, parameters, "分录（变化明细）");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TEntryRecord, Long> getIdentity() {
		return Keys.IDENTITY_T_ENTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TEntryRecord> getPrimaryKey() {
		return Keys.KEY_T_ENTRY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TEntryRecord>> getKeys() {
		return Arrays.<UniqueKey<TEntryRecord>>asList(Keys.KEY_T_ENTRY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TEntry as(String alias) {
		return new TEntry(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TEntry rename(String name) {
		return new TEntry(name, null);
	}
}
