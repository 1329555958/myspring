buildscript {
    repositories {
        maven {
            url "http://nexus.vfinance.cn:9081/content/groups/public/"
//            url 'http://dl.bintray.com/cjstehno/public'
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
//        classpath("io.spring.gradle:dependency-management-plugin:0.4.1.RELEASE")
//        classpath('net.saliman:gradle-liquibase-plugin:1.0.0')
//        classpath "net.ltgt.gradle:gradle-apt-plugin:0.4"
//        classpath 'com.h2database:h2:1.3.160'
//        classpath 'mysql:mysql-connector-java:5.1.36'
        classpath "com.ewerk.gradle.plugins:querydsl-plugin:1.0.3"
//        classpath("io.spring.gradle:dependency-management-plugin:0.4.1.RELEASE")
//        classpath("net.saliman:gradle-cobertura-plugin:2.2.8")
//        classpath("org.hibernate:hibernate-validator:5.1.3.Final")
        classpath 'org.springframework:springloaded:1.2.3.RELEASE'
//        classpath 'no.nils:wsdl2java:0.6'
//        classpath 'gradle-templates:gradle-templates:1.5'
    }
}

//apply plugin: 'templates'
apply plugin: 'java'
apply plugin: 'idea'


apply from: "$rootDir/dependencies.gradle"

configure(allprojects) { project ->
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    maven { url "http://nexus.vfinance.cn:9081/content/groups/public/" }
    maven { url "http://repo.spring.io/release" }
}

//---sub project common config ---
subprojects {

    apply plugin: 'idea'
    apply plugin: 'war'
    apply plugin: 'spring-boot'

    repositories {
        maven { url "http://nexus.vfinance.cn:9081/content/groups/public/" }
        maven { url "http://repo.spring.io/release" }
        mavenCentral()
    }

    dependencies {
        compile libs.common
        compile libs.jackson
        compile libs.springBoot
//        compile project(':util')
//        compile libs.matrix
//        compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: mapstructVersion
        testCompile libs.test
    }

    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/main/")
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

test.dependsOn(subprojects.test)

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'


task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}
